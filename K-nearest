import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, accuracy_score
from sklearn.impute import SimpleImputer
# importing the dataset
dataset = pd.read_csv("Experiment9.csv")
# Extract features and target variable
X = dataset.iloc[:, [2, 3]].values
y = dataset.iloc[:, -1].values
# Handle NaN values in the target variable 'y'
imputer = SimpleImputer(strategy='most_frequent') # Replace NaN with the most fre
y = imputer.fit_transform(y.reshape(-1, 1)).ravel() # Reshape y to a 2D array for
# Splitting the dataset into the Training set and Test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_
# Feature Scaling
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
# Training the K-NN model on the Training set
classifier = KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2)
classifier.fit(X_train, y_train)
# Predicting the Test set results
y_pred = classifier.predict(X_test)
# Making the Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
ac = accuracy_score(y_test, y_pred)
print(ac)
print(cm)
print(y_pred)
